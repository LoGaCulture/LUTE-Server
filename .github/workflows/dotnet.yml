name: .NET Build and Publish

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: publish

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0'

      - name: Restore dependencies
        run: dotnet restore

      - name: Publish the project
        run: dotnet publish --configuration Release --output ./Release-${{ github.sha }}

      - name: Get latest tag
        id: get_tag
        run: |
          tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          echo "tag=$tag" >> $GITHUB_ENV

      - name: Get short SHA if no tag exists
        id: get_sha
        run: echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Zip output
        run: |
          if [ -n "${{ env.tag }}" ]; then \
            zip_name="LUTE-Server-${{ env.tag }}.zip"; \
          else \
            zip_name="LUTE-Server-${{ env.short_sha }}.zip"; \
          fi; \
          cd ./Release-${{ github.sha }} && zip -r ../$zip_name ./*

      # Use the new ncipollo/release-action to create a release and upload artifacts
      - name: Create and Upload Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.tag != '' && env.tag || env.short_sha }} # Use the tag or fallback to short SHA
          name: "LUTE-Server Release ${{ env.tag != '' && env.tag || env.short_sha }}"
          body: |
            ## Release Details
            - Tag: ${{ env.tag != '' && env.tag || env.short_sha }}
            - Commit: ${{ env.short_sha }}
          artifacts: "${{ env.tag != '' && 'LUTE-Server-' + env.tag || 'LUTE-Server-' + env.short_sha }}.zip"
          artifactContentType: "application/zip"
          prerelease: false
